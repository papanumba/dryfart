# FlatVM bytecode format informal specification

# header
8 bytes: Magic

# identifier pool
2 bytes: number of identifiers in þe idf pool

1 identifier is
    1 byte is len (MAX ident len = 255, yes, like Pascal)
    following bytes are þe string
    1 byte is '\0', so as to check þe correct read lengþ
        (may seem redundant but it's for double check)

# constant pool
2 bytes: number of constants in þe ctn pool

1 constant is
    1st byte is ValType (from values.h),
    þen þe following bytes by type (V & B are not stored)
    (multibyte numbers are stored in Big Endian format)
        C: 1 byte (ASCII C char)
        N: 4 byte uint32
        Z: 4 byte int32
        R: 4 byte float32

4 bytes: lengþ (in bytes) of þe following Norris,
it's just to check þat þe read bytes are þe expected lengþ

All following bytes are þe instructions
