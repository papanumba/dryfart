use https://bnfplayground.pauliankline.com/;

<Block>   ::= <Stmt>*
<Stmt>    ::= <Assign>
            | <IfElse>
            | <Loop>
            | <Break>
/*            | <Return>*/
            | <PcCall>
/*            | <EndProc>*/

<Assign>  ::= <Expr> "=" <Expr> "."

<IfElse>  ::= "[" <Expr> "=>" <Block>    /* if */
            ( "|" <Expr> "=>" <Block> )* /* else if */
            ( "|"        "=>" <Block> )? /* else */
              "]"

<Loop>    ::= "@" <Block> ("(" <Expr> ")" <Block>)? "."
<Break>   ::= "@@" <N>? "." /* break Nth level loop, default = 0 */

/*<Return>  ::= "##" <Expr> "."*/

<PcCall>  ::= <Expr> "!" <CommaEx>? "."
/*<EndProc> ::= "!!" <N>? "." /* end Nth level proc call */*/

/*
    TODO: $
    TODO: #;
    T%
    _
    unary /
    * / TODO: %
    unary -
    + -
    MAYBE: << >>
    TODO: &
    TODO: ^
    TODO: |
    == ~= < <= > >=
    &&
    ||
*/

<Expr>    ::= <BOrExpr>
<BOrExpr> ::= <BAndExpr> ("||" <BAndExpr>)*
<BAndExpr> ::= <CmpExpr> ("&&" <CmpExpr>)*
<CmpExpr> ::= <AddExpr> (<CmpOp> <AddExpr>)*
<CmpOp>   ::= r"([=~<>]=|<|>)"
<AddExpr> ::= <AddTerm> (("+" | "-") <AddTerm>)*
<NegExpr> ::= "-"* <MulExpr>
<MulExpr> ::= <MulTerm> (("*" | "/") <MulTerm>)*
<InvExpr> ::= "/"* <NotExpr>
<NotExpr> ::= "~"* <IdxExpr>
<IdxExpr> ::= <CastExpr> ("_" <CastExpr>)*
<CastExpr> ::= <PrimType>* <AccExpr>
<PrimType> ::= r"[BCNZR]%"

/*<FnArgs>  ::= "#" <CommaEx>? ";"*/

/*<AnonFn>  ::= "#" <FnPars>? ";" <Block> "."*/
/*<FnPars>  ::= <Ident> ("," <Ident>)**/

<AccExpr> ::= <Nucle> ("$" <Ident>)*

<Nucle>   ::= /*<AnonFn> |*/
            <Parented> | <Literal> | <Ident> /*| "@" /* recurs */

<Parented> ::= "(" <Expr> ")"
<Ident>   ::= "[A-Za-z][A-Za-z0-9]*"

<Literal> ::= <B> | <C> | <N> | <Z> | <R> | <String> | <ArrLit> | <TblLit>
<String>  ::= "check implementation"
<B> ::= r"[TF]"
<N> ::= r"[0-9]+u"
<Z> ::= r"[0-9]+"
<R> ::= r"[0-9]+\.[0-9]+"
<ArrLit>  ::= "_" <CommaEx> ";"
<TblLit>  ::= "$" (<Ident> "=" <Expr> ".")* ";"
<CommaEx> ::= (<Expr> ("," <Expr>)*)?
